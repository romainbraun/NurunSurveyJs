{
  "name": "qr",
  "description": "A small library to generate QR codes with libqrencode.",
  "version": "0.2.0",
  "author": {
    "name": "Brian Celenza",
    "email": "bcelenza@gmail.com"
  },
  "homepage": "https://github.com/bcelenza/node-qr",
  "keywords": [
    "qr",
    "qrcode",
    "qrencode",
    "qrencoder"
  ],
  "main": "./qr.js",
  "dependencies": {
    "vows": ">= 0.5.8",
    "benchmark": ""
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bcelenza/node-qr.git"
  },
  "license": {
    "type": "MIT",
    "url": "http://www.opensource.org/licenses/mit-license.php"
  },
  "scripts": {
    "test": "vows --spec test/*.js"
  },
  "readme": "# Node QR #\n\nnode-qr is a simple NodeJS binding to the libqrencode C library written by Kentaro Fukuchi (http://fukuchi.org/works/qrencode/index.en.html).\n\n## Installation ##\n\nTo use node-qr, you will first need to install the libqrencode C library\n\nFor Mac OS X (assumed MacPorts installed)\n\n    port install qrencode\n    \nFor Ubuntu Linux\n\n    apt-get install qrencode\n    \nOthers (see instructions on site)\n\n    http://fukuchi.org/works/qrencode/index.en.html\n \n   \nNode-qr is available in the Node Package Manager (NPM)\n\n    npm install qr\n\n## Usage ##\n\nCurrently node-qr only comes with an encoder. The usage is simple\n\n    encoder.encode(value, path = null, options = {});\n\nFirst, require the module\n\n    var Encoder = require('qr').Encoder;\n    var encoder = new Encoder;\n\nThe following example will encode a given value and emit an 'end' event with PNG data upon completion\n\n    // add an event listener for the 'end' event\n    // which fires upon encoding completion\n    encoder.on('end', function(png_data){\n        // png_data is an instance of Buffer\n        // do something\n    });\n    encoder.encode('some value');\n    \nAlternatively, you can pass a file path for the PNG data to be saved to\n\n    encoder.on('end', function(){\n        // if you specify a file path, nothing will be passed to the end listener\n        // do something\n    });\n    encoder.encode('some value', '/tmp/my_qr_file.png');\n    \nIf at any time an error occurs, an 'error' event will be emitted\n\n    encoder.on('error', function(err){\n        // err is an instance of Error\n        // do something\n    });\n    \nSee the tests in test/qr.js for more ways to use the encoder.\n\nWhile node-qr and libqrencode can encode images up to 4000 characters, this library makes no attempt to automatically set error correction and version options based on the size of the value (yet, anyway). You are responsible for determining what length your values will be and adjusting the options accordingly.\n\nSee [2D QR Code Barcode Generation Guide](http://www.idautomation.com/barcode/qr-code.html#Data_Encoded) for more information on limitations of QR Codes and the devices that read them.\n    \n## Encoder Options ##\n\nThe following options can be passed via the third argument of the encode method, which should be an object\n\n* background_color: self explanatory\n* foreground_color: self explanatory\n* dot_size: specify the size of dot (pixel). (default=3)\n* margin: specify the width of margin. (default=4)\n* level: specify error correction level from L (lowest) to H (highest). (default=L)\n* case_sensitive: ignore case distinctions and use only upper-case characters. (default=true)\n* version: specify the version of the symbol. (default=1)\n\nFor more information around options, see the docs provided for the libqrencoder library [here](http://fukuchi.org/works/qrencode/index.en.html \"libqrencoder\")\n\n## Feedback/Pull Requests ##\n\nFeedback and pull requests are always welcomed. This is a work-in-progress. Any help is greatly appreciated.\n\n## Who's Using node-qr? ##\n\n* Rax.io (Rackspace Short URL Service) - http://rax.io\n\n## Are you using node-qr? ##\n\nIf you are using Node QR in a production environment, I'd love to know! Send me a PM or email if you don't mind being listed in this readme.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bcelenza/node-qr/issues"
  },
  "_id": "qr@0.2.0",
  "dist": {
    "shasum": "fb3797e8482e10df76b77d4c6e463cee962c34b5"
  },
  "_from": "qr@",
  "_resolved": "https://registry.npmjs.org/qr/-/qr-0.2.0.tgz"
}
